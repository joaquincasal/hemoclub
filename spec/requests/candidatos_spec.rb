require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/donantes/candidatos", type: :request do
  # This should return the minimal set of attributes required to create a valid
  # Donante. As you add validations to Donante, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) do
    { last_name: "PÃ©rez", first_name: "Juan", email: "vzhlxfyd@mail.com", mobile: "1144444444", city: "Quilmes" }
  end

  before { allow(ENV).to receive(:[]).with("WEBHOOK_KEY").and_return("qwerty") }

  describe "POST /create" do
    context "with valid parameters" do
      it "creates a new candidato" do
        expect do
          post candidatos_donantes_url(key: "qwerty"), params: valid_attributes.to_json
        end.to change(Donante, :count).by(1)
        expect(Donante.last).to be_candidato
      end

      it "responds with success code" do
        post candidatos_donantes_url(key: "qwerty"), params: valid_attributes.to_json
        expect(response).to have_http_status(:ok)
      end

      it "creates a new candidato with correct attributes" do
        post candidatos_donantes_url(key: "qwerty"), params: valid_attributes.to_json
        candidato = Donante.last
        expect(candidato.nombre).to eq valid_attributes[:first_name]
        expect(candidato.apellidos).to eq valid_attributes[:last_name]
        expect(candidato.correo_electronico).to eq valid_attributes[:email]
        expect(candidato.telefono).to eq valid_attributes[:mobile]
        expect(candidato.localidad).to eq valid_attributes[:city]
      end
    end

    context "con donante existente" do
      before { create(:donante, correo_electronico: valid_attributes[:email]) }

      it "no crea un donante duplicado" do
        expect do
          post candidatos_donantes_url(key: "qwerty"), params: valid_attributes.to_json
        end.not_to change(Donante, :count)
      end
    end

    context "sin mandar el email" do
      it "no crea un candidato" do
        expect do
          post candidatos_donantes_url(key: "qwerty"), params: valid_attributes.except(:email).to_json
        end.not_to change(Donante, :count)
      end
    end
  end
end
