require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/exclusiones", type: :request do
  include Devise::Test::IntegrationHelpers
  # This should return the minimal set of attributes required to create a valid
  # Exclusion. As you add validations to Exclusion, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) do
    { fecha_inicio: "2023-1-1", fecha_fin: "2024-1-1", motivo: "cirugia", donante_id: @donante.id }
  end

  let(:invalid_attributes) do
    { fecha_inicio: "2023-1-1", fecha_fin: "2022-1-1", motivo: "cirugia", donante_id: @donante.id }
  end

  before do
    sign_in Usuario.new
    @donante = create(:donante)
  end

  describe "GET /new" do
    it "renders a successful response" do
      get new_donante_exclusion_path(@donante.id)
      expect(response).to be_successful
    end
  end

  describe "GET /edit" do
    it "renders a successful response" do
      exclusion = Exclusion.create! valid_attributes
      get edit_donante_exclusion_url(@donante, exclusion)
      expect(response).to be_successful
    end
  end

  describe "POST /create" do
    context "with valid parameters" do
      it "creates a new Exclusion" do
        expect do
          post donante_exclusiones_url(@donante), params: { exclusion: valid_attributes }
        end.to change(Exclusion, :count).by(1)
      end

      it "redirects to the donante" do
        post donante_exclusiones_url(@donante), params: { exclusion: valid_attributes }
        expect(response).to redirect_to(donante_url(@donante))
      end
    end

    context "with invalid parameters" do
      it "does not create a new Exclusion" do
        expect do
          post donante_exclusiones_url(@donante), params: { exclusion: invalid_attributes }
        end.not_to change(Exclusion, :count)
      end

      it "renders a response with 422 status (i.e. to display the 'new' template)" do
        post donante_exclusiones_url(@donante), params: { exclusion: invalid_attributes }
        expect(response).to have_http_status(:unprocessable_entity)
      end
    end
  end

  describe "PATCH /update" do
    context "with valid parameters" do
      let(:new_attributes) do
        { motivo: "otro" }
      end

      it "updates the requested exclusion" do
        exclusion = Exclusion.create! valid_attributes
        patch donante_exclusion_url(@donante, exclusion), params: { exclusion: new_attributes }
        exclusion.reload
        expect(exclusion.motivo).to eq "otro"
      end

      it "redirects to the donante" do
        exclusion = Exclusion.create! valid_attributes
        patch donante_exclusion_url(@donante, exclusion), params: { exclusion: new_attributes }
        exclusion.reload
        expect(response).to redirect_to(donante_url(@donante))
      end
    end

    context "with invalid parameters" do
      it "renders a response with 422 status (i.e. to display the 'edit' template)" do
        exclusion = Exclusion.create! valid_attributes
        patch donante_exclusion_url(@donante, exclusion), params: { exclusion: invalid_attributes }
        expect(response).to have_http_status(:unprocessable_entity)
      end
    end
  end

  describe "DELETE /destroy" do
    it "destroys the requested exclusion" do
      exclusion = Exclusion.create! valid_attributes
      expect do
        delete donante_exclusion_url(@donante, exclusion)
      end.to change(Exclusion, :count).by(-1)
    end

    it "redirects to the donante" do
      exclusion = Exclusion.create! valid_attributes
      delete donante_exclusion_url(@donante, exclusion)
      expect(response).to redirect_to(donante_url(@donante))
    end
  end
end
